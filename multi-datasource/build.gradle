plugins {
	id 'org.springframework.boot' version '2.7.6' apply false
	id 'io.spring.dependency-management' version '1.0.11.RELEASE' apply false
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

allprojects {
	repositories {
		mavenCentral()
	}
}

// 하위 모든 프로젝트 공통 세팅
subprojects {
	apply plugin: 'java-library'
	apply plugin: 'idea'
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'

	group 'com.spring.boiler-plate'
	version '0.0.1-SNAPSHOT'

	sourceCompatibility = '11'
	targetCompatibility = '11'
	compileJava.options.encoding = 'UTF-8'

	ext {
		springBootVersion = '2.7.6'
		queryDslVersion = "5.0.0"
	}

	// 하위 모듈에서 공통으로 사용하는 세팅 추가
	dependencies {
		compileOnly 'org.projectlombok:lombok'

		annotationProcessor 'org.projectlombok:lombok'
		annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

		testImplementation ('org.springframework.boot:spring-boot-starter-test') {
			exclude group: 'org.junit.vintage', module: 'junit-vintage-engine' //Junit4제외
		}
		testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
		testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
		testImplementation 'org.junit.jupiter:junit-jupiter-params:5.8.2'
		testRuntimeOnly 'com.h2database:h2'
	}

	tasks.named('test') {
		useJUnitPlatform()
	}
}

project(':api') {
	bootJar { enabled = true }
	jar { enabled = false }

	dependencies {
		implementation project(':core')
		implementation 'org.springframework.boot:spring-boot-starter-web'
	}
}

project(':core') {
	apply plugin: "com.ewerk.gradle.plugins.querydsl"

	bootJar { enabled = false } // core 은 bootJar 로 패키징 할 필요 없음
	jar { enabled = true }

	dependencies {
		implementation 'mysql:mysql-connector-java:8.0.28'
		api 'org.springframework.boot:spring-boot-starter-data-jpa'

		implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
		implementation "com.querydsl:querydsl-apt:${queryDslVersion}"
		implementation "com.querydsl:querydsl-sql-spring:${queryDslVersion}"
	}

	def querydslDir = "$buildDir/generated/querydsl"

	querydsl {
		jpa = true
		querydslSourcesDir = querydslDir
	}

	sourceSets {
		main.java.srcDir querydslDir
	}
	configurations {
		compileOnly {
			extendsFrom annotationProcessor
		}
		querydsl.extendsFrom compileClasspath
	}

	compileQuerydsl {
		options.annotationProcessorPath = configurations.querydsl
	}
}
